name: Deploy Flex
run-name: "Deployed App: Flex ${{ inputs.environment }}"

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        options:
          - staging_us
          - staging_uk
          - production_uk
          - production_us
        description: "Environment to use for deployment"
      initial_release:
        required: true
        type: boolean
        description: Is this the first release to the environment?
        default: false
      overwrite_config:
        required: true
        type: boolean
        default: false
        description: Overwrite config set by Admin UI Panel?

concurrency:
  group: flex-deploy-${{ inputs.environment }}

jobs:
  # Single approval and secrets initialization
  approval_and_init:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }} # Attach to the specific environment
      url: ${{ github.event.workflow_run.html_url }}
    steps:
      - name: Await manual approval
        run: |
           echo "Manual approval granted for environment: ${{ inputs.environment }}"
      - name: Export Environment Variables
        run: |
          echo "ENVIRONMENT=${{ inputs.environment }}" >> $GITHUB_ENV
          echo "INITIAL_RELEASE=${{ inputs.initial_release }}" >> $GITHUB_ENV
          echo "OVERWRITE_CONFIG=${{ inputs.overwrite_config }}" >> $GITHUB_ENV

  # Validation job
  validate-flex-account:
    needs: approval_and_init
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

  # Initial serverless release (if applicable)
  perform-initial-serverless-release:
    needs: validate-flex-account
    if: ${{ env.INITIAL_RELEASE == 'true' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

  # Deploy packages
  deploy-packages:
    needs: validate-flex-account
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

  # Deploy Flex Config
  deploy-flex-config:
    needs: deploy-packages
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

  # Deploy Release Plugin
  deploy-release-plugin:
    needs: validate-flex-account
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
      TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
      PLUGIN_FOLDER: plugin-flex-ts-template-v2
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'