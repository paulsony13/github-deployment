
name: Deploy Flex
run-name: "Deployed App: Flex ${{ inputs.environment || github.event.inputs.environment }}"
# Within this file, FEATURE and END FEATURE blocks are used only by the remove-features script.

on:
  # To run this workflow via automated triggers, see the .github/examples directory.

  # Enables running this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        required: true
        options:
          - staging_us
          - staging_uk
          - production_uk
          - production_us
        description: "Environment to use for deployment"
      initial_release:
        required: true
        type: boolean
        description: Is this the first release to the environment?
        default: false
      overwrite_config:
        required: true
        type: boolean
        default: false
        description: Overwrite config set by Admin UI Panel?

concurrency:
  group: flex-deploy-${{ inputs.environment || github.event.inputs.environment }}

jobs:
  validate-flex-account:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:

      # - name: Get Environment Id
      #   id: environment-id
      #   shell: pwsh
      #   run: |
      #     $environmentId = ""
      #     $url = "https://api.github.com/repos/${{ github.repository }}/environments"
      #     $response = Invoke-RestMethod -Uri $url -Method Get  -Headers @{
      #       Authorization = "Bearer ${{ secrets.REPO_ACCESS_TOKEN }}"
      #     }
      #     if ($response){
      #       # Find Environment Id...
      #       foreach ($environment in $response.environments) {
      #         if ($environment.name -eq "${{ github.event.inputs.environment }}"){
      #           $environmentId = $environment.id
      #           break
      #         }
      #       }
      #     }
      #     # Set output
      #     echo "::set-output name=value::$(echo $environmentId)"
  
      # - name: Show me Environment Id
      #   run: |
      #     echo "Environment Id for ${{ github.event.inputs.environment }} is ${{ steps.environment-id.outputs.value }}"

      # - name: Set env
      #   if: startsWith(github.event.inputs.environment, 'production')     
      #   run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV    
      # - name: Request Approval
      #   if: startsWith(github.event.inputs.environment, 'production')
      #   uses: trstringer/manual-approval@v1
      #   with:
      #     secret: ${{ secrets.REPO_ACCESS_TOKEN }}
      #     approvers: paulsony13
      #     minimum-approvals: 1
      #     issue-title: "Deploying ${{ env.RELEASE_VERSION }} to ${{ github.event.inputs.environment }}"
      #     issue-body: "Please approve or deny the deployment of version ${{ env.RELEASE_VERSION }}"
      #     exclude-workflow-initiator-as-approver: false      
      - uses: actions/checkout@v4
      - name: setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

  # When performing an initial release
  # the serverless backend needs an initial deploy so
  # the domain name can be pulled in for the terraform deploy
  perform-initial-serverless-release:
    needs:
      - validate-flex-account
    if: |
      (inputs.initial_release == true)
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      ENVIRONMENT: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - name: setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
  deploy-packages:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      ENVIRONMENT: ${{ inputs.environment }}
    needs:
      - validate-flex-account
    steps:
      - uses: actions/checkout@v4
      - name: setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
  
  # auto-approve-stage-1:
  #   if: startsWith(github.event.inputs.environment, 'production')
  #   name: Auto approve job
  #   needs: validate-flex-account
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Auto approve
  #       shell: pwsh
  #       run: |        
  #         $url = "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/pending_deployments";
  #         $body = @"
  #         { "environment_ids": [ 5039058891 ],
  #           "state": "approved",
  #           "comment": "Auto-approved for automation"
  #         }
  #         "@;
  #         Invoke-RESTMethod -Uri $url -Method POST -Headers @{
  #           Authorization = "Bearer ${{ secrets.REPO_ACCESS_TOKEN }}"
  #         } -Body $body -ContentType "application/json";      

  auto-approve-deployment:
    needs: validate-flex-account
    runs-on: ubuntu-latest
    steps:
      - name: Call Reusable Action
        uses: ../../actions/auto-approve.yaml√ü # Update this path to the reusable action
        with:
          environment: ${{ github.event.inputs.environment }}
          repo_access_token: ${{ secrets.REPO_ACCESS_TOKEN }}

  deploy-flex-config:
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ inputs.environment }}
      OVERWRITE_CONFIG: ${{ inputs.initial_release == true || inputs.overwrite_config == true }}
    needs:
      - deploy-packages
      - validate-flex-account
    steps:
      - uses: actions/checkout@v4
      - name: setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'


  deploy-release-plugin:
    needs:
      - validate-flex-account
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
      TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
      PLUGIN_FOLDER: plugin-flex-ts-template-v2
    steps:
      - uses: actions/checkout@v4
      - name: setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'